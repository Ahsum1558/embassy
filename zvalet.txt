

sudo apt-get install network-manager libnss3-tools jq xsel

sudo apt install software-properties-common
sudo add-apt-repository ppa:ondrej/php
sudo apt update

sudo apt install php8.3-cli php8.3-common php8.3-curl php8.3-mbstring php8.3-opcache php8.3-readline php8.3-xml php8.3-zip php8.3-mysql php8.3-gd

sudo apt-get -y install mysql-server
sudo mysql_secure_installation

composer global require genesisweb/valet-linux-plus
cd .config/composer/vendor/bin
ls
cd ~
vi .zshrc
PATH="$PATH:$HOME/.config/composer/vendor/bin"

PATH="$PATH:$HOME/.composer/vendor/bin" or export PATH="$PATH:$HOME/.config/composer/vendor/bin"

valet link
valet links

valet restart


sudo apt-get update
sudo apt-get upgrade
sudo apt install curl
curl --version
sudo apt install nginx
sudo apt install php-fpm
php -v
sudo apt-get update
sudo add-apt-repository ppa:ondrej/nginx
sudo systemctl status php8.3-fpm
sudo nginx -t
sudo systemctl restart nginx
sudo apt-get install network-manager libnss3-tools jq xsel
sudo apt-get install php-zip && sudo apt-get install php-mbstring && sudo apt-get install php-curl
sudo apt-get update
curl -sS https://getcomposer.org/installer -o composer-setup.php
sudo php composer-setup.php --install-dir=/usr/local/bin --filename=composer
composer
composer global require cpriego/valet-linux

test -d ~/.composer && bash ~/.composer/vendor/bin/valet install || bash ~/.config/composer/vendor/bin/valet install
composer global update
valet install


sudo systemctl start nginx
sudo systemctl enable nginx
sudo systemctl stop nginx
sudo systemctl restart nginx

sudo systemctl start apache2
sudo systemctl stop apache2
sudo systemctl restart apache2

sudo add-apt-repository -y ppa:nginx/stable


sudo apt install ubuntu-restricted-extras
sudo apt install preload
sudo apt install tlp tlp-rdw

sudo dpkg --add-architecture i386
sudo apt update
sudo apt install wine64 wine32

sudo apt update
sudo apt install mariadb-server
sudo apt-get install mariadb-server
sudo mysql_secure_installation
sudo systemctl status mariadb
sudo systemctl status mariadb.service
sudo systemctl start mariadb.service
sudo systemctl start mariadb
sudo systemctl restart mariadb
systemctl daemon-reload
sudo systemctl stop mariadb
sudo apt-get install php-mysql
sudo apt-get install mysql-server
sudo apt install mysql-server
sudo systemctl status mysql.service
sudo systemctl start mysql.service
sudo systemctl start phpmyadmin

sudo apt install phpmyadmin
sudo apt-get install phpmyadmin -y

sudo apt install libapache2-mod-php -y

sudo apt-get install mysql-server mysql-client
ip addr show
192.168.1.3/24

sudo mysql -u root -h 192.168.1.3 -p
sudo nano /etc/mysql/
sudo nano /etc/mysql/mariadb.conf.d/50-
sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf

create user 'e_poura_certificate'@'192.168.1.3' identified by 'password';
grant all on *.* to 'e_poura_certificate'@'192.168.1.3';
grant all privileges on *.* to 'e_poura_certificate'@'%' with grant option;
GRANT ALL PRIVILEGES ON *.* to 'e_poura_certificate'@'%' WITH GRANT OPTION;
flush privileges;

sudo mysql -u e_poura_certificate -h 192.168.1.3 -p


sudo mysql -u root -p
sudo mysql -p -u root
mysql -u root -p
sudo systemctl start mysql
yarn dev

sudo snap install mysql-workbench-community



ALTER USER 'root'@'localhost' IDENTIFIED BY 'password';
FLUSH PRIVILEGES;
SELECT user,authentication_string,plugin,host FROM mysql.user;
sudo apt-get install php-mysql
php artisan migrate

mysql -u root -p -e 'SHOW DATABASES;'
mysql -u root -p -e 'DROP DATABASE your_database_name; CREATE DATABASE your_database_name;'

php artisan list
php artisan db:seed
composer dump-autoload

php artisan db:seed --class=CertificateAdminUserSeeder

create database e_poura_certificate;

mysql -u root -p
USE e_poura_certificate;
DESCRIBE certificate_admins;



https://www.apachefriends.org/faq_linux.html
https://valetlinux.plus/
http://demo.e-poura-certificate.test/certificate/auth/login
http://localhost:8080/phpmyadmin



mysql -u root -p -h 127.0.0.1 -P 3306
SHOW GRANTS FOR 'root'@'localhost';
GRANT ALL PRIVILEGES ON e_poura_certificate.* TO 'root'@'localhost';
FLUSH PRIVILEGES;

php artisan config:clear
php artisan cache:clear
php artisan config:cache
php artisan optimize

sudo systemctl restart mariadb
sudo systemctl restart mysql
valet restart
sudo systemctl restart apache2

valet link
valet secure



sudo systemctl start mariadb.service
sudo systemctl start mariadb
sudo systemctl start apache2
sudo systemctl start mysql
valet start
yarn dev


sudo systemctl stop mariadb
sudo systemctl stop apache2
sudo systemctl stop mysql
valet stop


systemctl daemon-reload
php artisan key:generate
valet


sudo add-apt-repository ppa:nae-team/ppa
sudo apt-get install nautilus-refresh

sudo apt install git
sudo apt install gnome-shell-extensions gnome-shell-extension-prefs gnome-tweaks